setwd("/Users/udayshankar/Desktop/Analytics Edge/Week 7")
tweets <- read.csv(file.choose(),stringsAsFactors = FALSE)
library(ggplot2)
library(tm)
library(SnowballC)
corpus <- VCorpus(VectorSource(tweets$Tweet))
corpus <- tm_map(corpus,content_transformer(tolower))
corpus <- tm_map(corpus,removePunctuation)
corpus <- tm_map(corpus,removeWords,stopwords("english"))
dtm <- DocumentTermMatrix(corpus)
alltweets <- as.data.frame(as.matrix(dtm))
library(caTools)
library(wordcloud)
wordcloud(colnames(alltweets))
wordcloud(colnames(alltweets),scale = c(2,0.25))
wordcloud(colnames(alltweets),scale = c(1,0.25))
wordcloud(colnames(alltweets),scale = c(5,0.25))
?wordcloud
wordcloud(colnames(alltweets),scale = c(1,0.25),random.order = TRUE)
wordcloud(colnames(alltweets),scale = c(1,0.25),random.order = FALSE)
wordcloud(colnames(alltweets),scale = c(2,0.50),random.order = FALSE)
corpus <- tm_map(corpus,removeWords,c("apple",stopwords("english")))
dtm <- DocumentTermMatrix(corpus)
alltweets <- as.data.frame(as.matrix(dtm))
wordcloud(colnames(alltweets),colSums(alltweets),scale = c(2,0.50),random.order = FALSE)
display.brewer.all()
rm(list = ls())
edges <- read.csv(file.choose())
users <- read.csv(file.choose())
View(edges)
View(users)
mean(edges$V1)
mean(users$school == "AB")
mean(users$school == "AB"&users$locale=="B"&users$gender=="A")
install.packages("igraph")
library(igraph)
g <- graph.data.frame(edges,FALSE,users)
?graph.data.frame
g <- graph.data.frame(edges,TRUE,users)
g <- graph.data.frame(users,TRUE,edges)
g <- graph.data.frame(edges,FALSE,users)
plot(g,vertex.size = 5,vertex.label = NA)
degree(g)
sort(degree(g),descending = TRUE)
sort(degree(g))
V(g)$size <- degree(g)/(2+2)
plot(g,vertex.label = NA)
V(g)$size
sort(V(g)$size)
V(g)$color = "black"
V(g)$color[V(g)$gender == "A"] = "red"
V(g)$color[V(g)$gender == "B"] = "gray"
plot(g)
plot(g$gender)
View(users)
plot(V(g)$gender)
plot(g,vertex.label = NA)
V(g)$color[V(g)$school == "B"] = "blue"
V(g)$color[V(g)$school == "A"] = "red"
plot(g,vertex.label = NA)
V(g)$color[V(g)$locale == "A"] = "red"
V(g)$color[V(g)$locale == "B"] = "green"
V(g)$color[V(g)$locale == "A"] = "black"
plot(g,vertex.label = NA)
?igraph.plotting
?plot
library(maps)
library(ggmap)
statesmap <- map_data("state")
rm(list = ls())
statesmap <- map_data("state")
str(statesmap)
table(statesmap$group)
ggplot(statesmap,aes(x=long,y=lat,group=group)) + geom_polygon(fill = "white",color = "black")
library(caTools)
polling <- read.csv(file.choose())
str(polling)
train <- subset(polling, Year == 2004|Year==2008)
test <- subset(polling, Year == 2012)
mod <- glm(Republican~SurveyUSA+DiffCount,data = Train,family = "binomial")
mod <- glm(Republican~SurveyUSA+DiffCount,data = train,family = "binomial")
pred <- predict(mod,test,type = "response")
predtest <- as.numeric(pred>0.5)
preddf <- data.frame(pred,predtest,test$State)
table(predtest)
avg(pred)
mean(pred)
preddf$region <- tolower(preddf$test.State)
predmap <- merge(statesmap,preddf,by = "region")
predmap <- predmap[order(predmap$order),]
?merge
ggplot(predmap,aes(x=long,y=lat,group=group,fill=predtest))+geom_polygon(color = "black")
ggplot(predmap,aes(x=long,y=lat,group=group,fill=pred))+geom_polygon(color = "black")+scale_fill_gradient(low = "blue",high = "red",guide = "legend",labels = c("Democrat","Republican"),name = "Prediction 2012")
rlang::last_error()
rlang::last_trace()
ggplot(predmap,aes(x=long,y=lat,group=group,fill=pred))+geom_polygon(color = "black")+scale_fill_gradient(low = "blue",high = "red",guide = "legend",labels = c("Democrat","Republican"),name = "Prediction 2012")
ggplot(predmap,aes(x=long,y=lat,group=group,fill=predtest))+geom_polygon(color = "black")+scale_fill_gradient(low = "blue",high = "red",guide = "legend",labels = c("Democrat","Republican"),name = "Prediction 2012")
ggplot(predmap,aes(x=long,y=lat,group=group,fill=pred))+geom_polygon(color = "black")+scale_fill_gradient(low = "blue",high = "red",guide = "legend",breaks = c(0,1),labels = c("Democrat","Republican"),name = "Prediction 2012")
table(predmap$test.State == "florida")
mean(predmap$test.State == "florida")
which(predtest == "florida")
which(preddf$region == "florida")
preddf[6,]
?geom_polygon
rm(list = ls())
